import React, { useState, useEffect } from 'react';
import { View, Text, StyleSheet, FlatList } from 'react-native';
import { FIREBASE_DB } from './firebaseConfig';
import { ref, onValue, off } from 'firebase/database';

// Define an interface for the feedback data
interface Feedback {
  id: string;
  email: string;
  feedback: string;
  // Add other properties if present
}

const StaffFeedbackPage = () => {
  const [feedbackData, setFeedbackData] = useState([] as Feedback[]); // Corrected useState declaration

  useEffect(() => {
    const db = FIREBASE_DB;
    const feedbackRef = ref(db, 'staff_feedback');

    onValue(feedbackRef, (snapshot) => {
      const data = snapshot.val();
      if (data) {
        const feedbackArray = Object.entries(data).map(([key, value]) => {
          if (typeof value === 'object' && value !== null) {
            return {
              id: key,
              ...value,
            } as Feedback; // Type assertion here
          } else {
            // Handle the case where value is not an object
            return null;
          }
        }).filter(Boolean) as Feedback[]; // Type assertion here
        setFeedbackData(feedbackArray);
      }
    });
    
    
    

    // Clean up listener when component unmounts
    return () => {
      off(feedbackRef);
    };
  }, []);

  // Assuming userEmail is obtained from the logged-in user
  const userEmail = 'user@example.com';

  // Filter feedback data by user's email
  const userFeedback = feedbackData.filter((item) => item.email === userEmail);

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Staff Feedback</Text>
      <FlatList
        data={userFeedback} // Display only feedback for the current user
        keyExtractor={(item) => item.id}
        renderItem={({ item }) => (
          <View style={styles.feedbackItem}>
            <Text style={styles.email}>{item.email}</Text>
            <Text style={styles.feedback}>{item.feedback}</Text>
          </View>
        )}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    textAlign: 'center',
  },
  feedbackItem: {
    marginBottom: 20,
  },
  email: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 5,
  },
  feedback: {
    fontSize: 16,
  },
});

export default StaffFeedbackPage;

